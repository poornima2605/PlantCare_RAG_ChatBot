name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run basic FastAPI test
        run: |
          python -c "import uvicorn"

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/plantcare-chatbot:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/plantcare-chatbot:latest

  test-docker-image:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/plantcare-chatbot:latest

      - name: Run container
        run: |
          docker run -d --rm --name chatbot-test -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/plantcare-chatbot
          sleep 100

      - name: Wait for app to start
        run: |
          for i in {1..10}; do
            echo "Checking if app is up (attempt $i)..."
            if curl -s http://localhost:8000/ask -X POST -H "Content-Type: application/json" -d '{"question":"test"}' | grep -q "answer"; then
              echo "App is up!"
              break
            fi
            sleep 5
          done

      - name: Run tests against container
        run: |
          pip install requests
          pip install pytest
          pytest tests/
      
      - name: Print container logs (if it fails)
        if: failure()
        run: docker logs chatbot-test || true

      - name: Stop container
        if: always()
        run: docker stop chatbot-test
